name: Build DevForge

on:
  push:
    branches: [ main, release/*, github-workflow ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libx11-dev libxkbfile-dev libsecret-1-dev libkrb5-dev
          # Create .npmrc file with authentication tokens
          echo "//github.com/:_authToken=${{ github.token }}" > .npmrc
          echo "//api.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "@microsoft:registry=https://npm.pkg.github.com" >> .npmrc
          echo "@vscode:registry=https://npm.pkg.github.com" >> .npmrc
          echo "fetch-timeout=300000" >> .npmrc
          echo "fetch-retry-mintimeout=20000" >> .npmrc
          echo "fetch-retry-maxtimeout=120000" >> .npmrc
          npm install
          npm install -g node-gyp
          npm install -g gulp-cli
      - name: Build
        run: |
          npm run buildreact
          npm run gulp vscode-linux-x64-min
      - name: Package
        run: |
          mkdir -p .build/linux/client
          ARCHIVE_PATH=".build/linux/client/devforge-linux-x64.tar.gz"
          tar -czf $ARCHIVE_PATH -C .. VSCode-linux-x64
      - name: Generate checksum
        run: |
          cd .build/linux/client
          sha256sum devforge-linux-x64.tar.gz > devforge-linux-x64.tar.gz.sha256
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devforge-linux-x64
          path: |
            .build/linux/client/devforge-linux-x64.tar.gz
            .build/linux/client/devforge-linux-x64.tar.gz.sha256
  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libx11-dev libxkbfile-dev libsecret-1-dev libkrb5-dev
          # Create .npmrc file with authentication tokens
          echo "//github.com/:_authToken=${{ github.token }}" > .npmrc
          echo "//api.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "@microsoft:registry=https://npm.pkg.github.com" >> .npmrc
          echo "@vscode:registry=https://npm.pkg.github.com" >> .npmrc
          echo "fetch-timeout=300000" >> .npmrc
          echo "fetch-retry-mintimeout=20000" >> .npmrc
          echo "fetch-retry-maxtimeout=120000" >> .npmrc
          npm install
          npm install -g node-gyp
          npm install -g gulp-cli
      - name: Build
        run: |
          npm run buildreact
          npm run gulp vscode-linux-arm64-min
      - name: Package
        run: |
          mkdir -p .build/linux/client
          ARCHIVE_PATH=".build/linux/client/devforge-linux-arm64.tar.gz"
          tar -czf $ARCHIVE_PATH -C .. VSCode-linux-arm64
      - name: Generate checksum
        run: |
          cd .build/linux/client
          sha256sum devforge-linux-arm64.tar.gz > devforge-linux-arm64.tar.gz.sha256
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devforge-linux-arm64
          path: |
            .build/linux/client/devforge-linux-arm64.tar.gz
            .build/linux/client/devforge-linux-arm64.tar.gz.sha256
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Create .npmrc file with authentication tokens
          echo "//github.com/:_authToken=${{ github.token }}" > .npmrc
          echo "//api.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "@microsoft:registry=https://npm.pkg.github.com" >> .npmrc
          echo "@vscode:registry=https://npm.pkg.github.com" >> .npmrc
          echo "fetch-timeout=300000" >> .npmrc
          echo "fetch-retry-mintimeout=20000" >> .npmrc
          echo "fetch-retry-maxtimeout=120000" >> .npmrc
          npm install
          npm install -g node-gyp
          npm install -g gulp-cli
      - name: Build
        run: |
          npm run buildreact
          npm run gulp vscode-win32-x64-min
      - name: Package
        run: |
          mkdir -p .build/win32-x64
          Compress-Archive -Path ..\VSCode-win32-x64\* -DestinationPath .build\win32-x64\devforge-win32-x64.zip
        shell: pwsh

      - name: Generate checksum
        run: |
          cd .build/win32-x64
          $hash = Get-FileHash -Algorithm SHA256 devforge-win32-x64.zip
          $hash.Hash | Out-File -Encoding ascii devforge-win32-x64.zip.sha256
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devforge-win32-x64
          path: |
            .build/win32-x64/devforge-win32-x64.zip
            .build/win32-x64/devforge-win32-x64.zip.sha256
  build-windows-arm64:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          # Create .npmrc file with authentication tokens
          echo "//github.com/:_authToken=${{ github.token }}" > .npmrc
          echo "//api.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ github.token }}" >> .npmrc
          echo "@microsoft:registry=https://npm.pkg.github.com" >> .npmrc
          echo "@vscode:registry=https://npm.pkg.github.com" >> .npmrc
          echo "fetch-timeout=300000" >> .npmrc
          echo "fetch-retry-mintimeout=20000" >> .npmrc
          echo "fetch-retry-maxtimeout=120000" >> .npmrc
          npm install
          npm install -g node-gyp
          npm install -g gulp-cli
      - name: Build
        run: |
          npm run buildreact
          npm run gulp vscode-win32-arm64-min
      - name: Package
        run: |
          mkdir -p .build/win32-arm64
          Compress-Archive -Path ..\VSCode-win32-arm64\* -DestinationPath .build\win32-arm64\devforge-win32-arm64.zip
        shell: pwsh

      - name: Generate checksum
        run: |
          cd .build/win32-arm64
          $hash = Get-FileHash -Algorithm SHA256 devforge-win32-arm64.zip
          $hash.Hash | Out-File -Encoding ascii devforge-win32-arm64.zip.sha256
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devforge-win32-arm64
          path: |
            .build/win32-arm64/devforge-win32-arm64.zip
            .build/win32-arm64/devforge-win32-arm64.zip.sha256

